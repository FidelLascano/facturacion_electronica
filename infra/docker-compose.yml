services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: facturacion
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports: ["5432:5432"]
    healthcheck: { test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER"], interval: 5s, timeout: 5s, retries: 20 }

  redis:
    image: redis:7
    ports: ["6379:6379"]

  minio:
    image: minio/minio:latest
    command: server /data --console-address :${MINIO_CONSOLE_PORT:-9001}
    environment:
      MINIO_ROOT_USER: ${APP_S3_ACCESS:-minioadmin}
      MINIO_ROOT_PASSWORD: ${APP_S3_SECRET:-minioadmin}
    ports: ["9000:9000","${MINIO_CONSOLE_PORT:-9001}:${MINIO_CONSOLE_PORT:-9001}"]
    volumes: ["minio-data:/data"]

  mailhog:
    image: mailhog/mailhog:latest
    ports: ["1025:1025","8025:8025"]

  vault:
    image: hashicorp/vault:1.15
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN:-root}
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add: ["IPC_LOCK"]
    ports: ["8200:8200"]

  wiremock:
    image: wiremock/wiremock:3.6.0
    ports: ["9999:8080"]
    volumes: ["./wiremock:/home/wiremock"]

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - APP_JWT_SECRET=${APP_JWT_SECRET}
      - APP_TIMEZONE=${APP_TIMEZONE}
      - APP_CACHE=${APP_CACHE}
      - APP_RATELIMIT_ENABLED=${APP_RATELIMIT_ENABLED}
      - APP_RATELIMIT_PER_MIN=${APP_RATELIMIT_PER_MIN}
      - APP_QUOTA_DOCS_PER_DAY=${APP_QUOTA_DOCS_PER_DAY}
      - APP_KMS_MODE=${APP_KMS_MODE}
      - APP_SRI_RECEPCION_URL=${APP_SRI_RECEPCION_URL}
      - APP_SRI_AUTORIZACION_URL=${APP_SRI_AUTORIZACION_URL}
      - APP_S3_ENDPOINT=${APP_S3_ENDPOINT}
      - APP_S3_BUCKET=${APP_S3_BUCKET}
      - APP_S3_ACCESS=${APP_S3_ACCESS}
      - APP_S3_SECRET=${APP_S3_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SPRING_DATASOURCE_URL=${POSTGRES_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
    ports: ["8080:8080"]
    depends_on: [postgres, redis, minio, vault, wiremock]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports: ["5173:5173"]
    environment:
      - VITE_API_BASE=http://localhost:8080

volumes:
  minio-data: {}


  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana:latest
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on: [prometheus]


  otel-collector:
    image: otel/opentelemetry-collector:0.98.0
    command: ["--config=/etc/otel/config.yaml"]
    volumes:
      - ./otel/config.yaml:/etc/otel/config.yaml
    ports: ["4317:4317","4318:4318"]
